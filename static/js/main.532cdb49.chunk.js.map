{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layouts/Header.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","this","props","todo","id","title","className","onClick","delTodo","bind","toggleCompleted","Component","Todos","todos","map","key","React","Header","state","task","onChange","e","setState","target","value","onSubmit","preventDefault","toastr","options","positionClass","error","input","current","focus","addTodo","createRef","type","autoFocus","autoComplete","placeholder","name","ref","aria-label","App","completed","updateLocalStorage","console","log","localStorage","setItem","JSON","stringify","filter","newTodo","uuidv4","length","data","getItem","parse","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","publicUrl","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.532cdb49.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass TodoItem extends Component {\r\n    render() {\r\n        const {id , title} = this.props.todo\r\n        return (\r\n            <li> {title} \r\n                <div className=\"buttons\" >\r\n                    <button className=\"remove\" onClick={this.props.delTodo.bind(this,id)}>\r\n                        <i className=\"fa fa-trash fs-19 text-danger\"></i>\r\n                    </button>\r\n                    <button className=\"complete\" onClick={this.props.toggleCompleted.bind(this, id)} >\r\n                        <i className=\"fa fa-check fs-19 text-success\"></i>\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends React.Component {\r\n    render() {\r\n        return this.props.todos.map((todo) => (        \r\n            <TodoItem key={todo.id} todo={todo} delTodo={this.props.delTodo} toggleCompleted={this.props.toggleCompleted} />\r\n        ));\r\n    }\r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos;","import React, { Component, Fragment } from 'react'\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.input = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        task:'',\r\n    }\r\n\r\n    onChange = (e) => this.setState({task: e.target.value})\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.task === '') {\r\n            toastr.options = {\r\n                positionClass: 'toast-bottom-left',\r\n            }\r\n            toastr.error('Please provide a task. The task cannot be empty','Ooops!' )\r\n            this.input.current.focus();\r\n            return;\r\n        }\r\n        this.props.addTodo(this.state.task);\r\n        this.setState({ task: '' })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <header>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input type=\"text\" \r\n                            autoFocus \r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Enter an activity...\"\r\n                            id=\"item\" name=\"todo_item\" onChange={this.onChange}\r\n                            value={this.state.task}\r\n                            ref={this.input}\r\n                            aria-label=\"Type a task\"\r\n                        />\r\n                        <button id=\"add\" type=\"submit\" aria-label=\"Add a task\">\r\n                            <i className=\"fa fa-plus text-white fs-19\"></i>\r\n                        </button>\r\n                    </form>\r\n            </header>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport Todos from \"./components/Todos\";\nimport Header from './components/layouts/Header';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    completed: []\n  }\n\n  componentDidMount() {\n    const data = (localStorage.getItem('todoList')) ? JSON.parse(localStorage.getItem('todoList')) : {\n      todos: [],\n      completed: []\n    };\n    const {todos, completed} = data\n    if (!todos) todos = [];\n    if(!completed) completed = [];\n    \n    this.setState({todos,completed})\n  }\n\n  updateLocalStorage = () => {\n    const { todos, completed } = this.state\n    console.log(this.state.todos);\n    localStorage.setItem('todoList', JSON.stringify({ todos, completed }));\n  }\n\n  delTodo = (id) => {\n    let { todos, completed } = this.state\n    this.setState({\n      todos : [...todos.filter(todo => todo.id !== id)],\n      completed: [...completed.filter(todo => todo.id !== id)]\n    }, () => this.updateLocalStorage());\n    \n  }\n\n  addTodo = (task) => {\n    const newTodo = {\n      id: uuidv4(),\n        title: task\n    }\n\n    this.setState({ todos: [ newTodo, ...this.state.todos ] },() => this.updateLocalStorage())\n\n    \n  }\n\n  toggleCompleted = (id) => {\n    let { todos, completed } = this.state\n    if (completed.filter(todo => todo.id === id).length === 0){\n      this.setState({\n        todos: [ ...todos.filter(todo => todo.id !== id) ],\n        completed: [ ...completed, ...todos.filter(todo => todo.id === id) ]\n      }, () => this.updateLocalStorage());\n    }else{\n      this.setState({\n        todos: [ ...todos, ...completed.filter(todo => todo.id === id) ],\n        completed: [ ...completed.filter(todo => todo.id !== id) ]\n      }, () => this.updateLocalStorage());\n    }\n    \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header addTodo={this.addTodo} />\n        <div className=\"container\">\n          {/*  Uncompleted tasks */}\n        <ul className=\"todo\" id=\"todo\">\n            <Todos todos={this.state.todos} delTodo={this.delTodo} toggleCompleted={this.toggleCompleted} />\n        </ul>\n          {/* Completed tasks */}\n        <ul className=\"todo\" id=\"completed\">\n            <Todos todos={this.state.completed} delTodo={this.delTodo} toggleCompleted={this.toggleCompleted} />\n        </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    console.log(publicUrl);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}